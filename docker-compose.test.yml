services:
  axion_server:
    image: node:22
    container_name: axion_server
    ports:
      - "3000:3000"
    working_dir: /app
    volumes:
      - .:/app
    command: npm start
    networks:
      - app_network
    depends_on:
      - mongodb
      - redis
    environment:
      MONGO_URI: mongodb://admin:password@mongodb:27017/axion?authSource=admin
      REDIS_URI: redis://default:redispassword@redis:6379
      USER_PORT: 3000
      ADMIN_PORT: 5222
      ADMIN_URL: http://localhost:5222
      SERVICE_NAME: axion
      LONG_TOKEN_SECRET: supersecrettokenlong
      SHORT_TOKEN_SECRET: supersecrettokenshort
      NACL_SECRET: supersecretkeyforencryption
      CORTEX_REDIS: redis://default:redispassword@redis:6379
      CORTEX_PREFIX: axion
      CORTEX_TYPE: axion-service
      OYSTER_REDIS: redis://default:redispassword@redis:6379
      OYSTER_PREFIX: oyster
      BULL_REDIS: redis://default:redispassword@redis:6379
      CACHE_REDIS: redis://default:redispassword@redis:6379
      CACHE_PREFIX: axion:cache
  axion_test:
    image: node:22
    container_name: axion_test
    working_dir: /app
    volumes:
      - .:/app
    command: npm test
    networks:
      - app_network
    depends_on:
      - axion_server
    environment:
      TEST_ENV: container

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: no
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - app_network
    volumes:
      - ./init-test-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  redis:
    image: redis:latest
    container_name: redis
    restart: no
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispassword
    networks:
      - app_network
networks:
  app_network:
    driver: bridge
